app:
  scheduler:
    enable: true
    interval: 1h
    force-check-delay: 1h
  git-base-url: https://api.github.com/repos/
  sof-base-url: https://api.stackexchange.com/2.3/questions/
  bot-api-base-url: http://localhost:8090
  database-access-type: jpa
  retry-policy:
    mode: linear
    codes:
      - 500
      - 502
      - 504
  kafka:
    producer:
      acks-mode: 1
      client-id: scrapper
      delivery-timeout: 2m
      linger-ms: 12_000
      batch-size: 100_000
      max-in-flight-per-connection: 5
      boot-strap-servers: localhost:9092,localhost:9093
      topic-name: scrapper.updates
  use-queue: false

spring:
  application:
    name: scrapper
  liquibase:
    enabled: false
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
  cache:
    jcache:
      provider: com.github.benmanes.caffeine.jcache.spi.CaffeineCachingProvider
    cache-names:
      - rate-limit-bucket
    caffeine:
      spec: maximumSize=100000,expireAfterAccess=1d
server:
  port: 8080

logging:
  config: classpath:log4j2-plain.xml
#  level:
#    root: debug
#    org:
#      springframework:
#        web: trace
#      apache: trace
#debug: true

springdoc:
  swagger-ui:
    path: /swagger-ui

management:
  metrics:
    tags:
      application: ${spring.application.name}
  server:
    port: 8081
  endpoints:
    web:
      base-path: /
      path-mapping:
        prometheus: metrics
      exposure:
        include: health,info,prometheus
    enabled-by-default: false
  endpoint:
    info:
      enabled: true
    health:
      enabled: true
    prometheus:
      enabled: true

#rate-limit
bucket4j:
  enabled: true
  cache-to-use: jcache
  filters:
    - cache-name: rate-limit-bucket
      url: /api/.*
      rate-limits:
      - cache-key: getRemoteAddr()
        bandwidths:
          - capacity: 300
            time: 1
            unit: days
